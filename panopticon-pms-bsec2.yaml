# Note: The BSEC2 library is only available for use after accepting its software license agreement. 
# By compiling this configuration, you are explicitly agreeing to the terms of the BSEC license agreement. 
# As of 12/2024 the license grants non-exclusive, non-transferable and non-sublicensable right 
# to generate and copy compiled object code of the Software 
# and to use and sell compiled object code of the Software in compliance with the license
#
# tl;dr - Derivitives of this config and any items you make based on this config are probably okay to sell
# as long as it's a consumer electronics device not used in life-sustaining or safety-critical systems
# it cannot be used for military applications, nor can you give/sell this to an embargoed/hostile nation
#
# This is not legal advice and I am not your dentist. 
# By compiling you indemnify me, Bosch, github, and anyone else from legal action.
# Compile at your own risk. 

esphome:
  name: panopticon-pms-bsec2
  friendly_name: Panopticon PMS BSEC2

esp32:
  board: esp32-c6-devkitm-1
  variant: esp32c6
  partitions: partitions_zb.csv
  framework:
    type: esp-idf
    version: 5.3.0
    platform_version: 6.8.1
    sdkconfig_options:
      CONFIG_ESPTOOLPY_FLASHSIZE_4MB: y

i2c:
  sda: GPIO12
  scl: GPIO13
  scan: false
  
uart:
  - id: motion_bus
    tx_pin: GPIO21
    rx_pin: GPIO22
    baud_rate: 9600
  - id: pms_bus
    tx_pin: GPIO19
    rx_pin: GPIO18
    baud_rate: 9600
ld2410:
  - uart_id: motion_bus
light:
  - platform: esp32_rmt_led_strip
    rgb_order: RGB
    pin: GPIO08
    num_leds: 1
    chipset: WS2812
    rmt_symbols: 48
    id: "led_1"
    name: "Board LED"
    icon: "mdi:led-outline"
    effects:
      - random:
      - flicker:
      - addressable_rainbow:
binary_sensor:
  - platform: ld2410
    has_target:
      name: Presence
      id: presence
    has_moving_target:
      name: Moving Target
      id: motion
  - platform: gpio
    pin:
      number: 9
      mode:
        input: true
        pullup: true
      inverted: true
    id: button_1
    on_press:
      then:
        - zigbee.report: zb
    on_click:
      min_length: 5s
      max_length: 20s
      then:
        - zigbee.reset: zb

bme68x_bsec2_i2c:
  address: 0x77
  model: bme680
  operating_age: 28d
  sample_rate: ULP
  supply_voltage: 3.3V

sensor:
  - platform: template
    name: Temperature_F
    id: temperature_f
    lambda: return id(temperature).state * 9/5+32;
    update_interval: 60s
  - platform: template
    id: qualnum1
    lambda: |-
      return static_cast<int>(std::atoi(id(qualnum).state.c_str()));
    update_interval: 60s
    on_value:
      then:
        - zigbee.setAttr:
            id: setqual
            value: !lambda "return x;"
        - zigbee.report: zb
  - platform: template
    id: accunum1
    lambda: |-
      return static_cast<int>(std::atoi(id(accunum).state.c_str()));
    update_interval: 60s
    on_value:
      then:
        - zigbee.setAttr:
            id: setaccu
            value: !lambda "return x;"
        - zigbee.report: zb
  - platform: bme68x_bsec2
    temperature:
      name: "BME680 Temperature"
      id: temperature
    pressure:
      name: "BME680 Pressure"
      id: pressure
    humidity:
      name: "BME680 Humidity"
      id: humidity
    gas_resistance:
      name: "BME680 Gas Resistance"
      id: gasresist
    iaq:
      name: "BME68x IAQ"
      id: iaq

  - platform: pmsx003
    uart_id: pms_bus
    type: PMSX003
    pm_1_0:
      name: "Particulate Matter <1.0µm Concentration"
      id: pm1
    pm_2_5:
      name: "Particulate Matter <2.5µm Concentration"
      id: pm2
    pm_10_0:
      name: "Particulate Matter <10.0µm Concentration"
      id: pm10
  - platform: ld2410
    light:
      name: light
      id: ldlux
    moving_distance:
      name: Moving Distance
      id: mdistance 
    still_distance:
      name: Still Distance
      id: sdistance 
    moving_energy:
      name: Move Energy
      id: menergy
    still_energy:
      name: Still Energy
      id: senergy
    detection_distance:
      name: Detection Distance
      id: ddistance
switch:
  - platform: ld2410
    engineering_mode:
      name: "engineering mode"
      id: emode
      restore_mode: RESTORE_DEFAULT_OFF
    bluetooth:
      name: "control bluetooth"
      id: bmode
      restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    pin: 
      number: GPIO10
    id: pms_set
    name: "Start measuring"

text_sensor:
  - platform: bme68x_bsec2
    iaq_accuracy:
      name: "BME68x IAQ Accuracy"
      id: accuracy
  - platform: template
    id: quality
    name: "BME68x IAQ Classification"
    lambda: |-
      if ( int(id(iaq).state) <= 50) {
        return {"Excellent"};
      }
      else if (int(id(iaq).state) >= 51 && int(id(iaq).state) <= 100) {
        return {"Good"};
      }
      else if (int(id(iaq).state) >= 101 && int(id(iaq).state) <= 150) {
        return {"OK"};
      }
      else if (int(id(iaq).state) >= 151 && int(id(iaq).state) <= 200) {
        return {"Fair"};
      }
      else if (int(id(iaq).state) >= 201 && int(id(iaq).state) <= 250) {
        return {"Poor"};
      }
      else if (int(id(iaq).state) >= 251 && int(id(iaq).state) <= 350) {
        return {"Bad"};
      }
      else if (int(id(iaq).state) >= 351) {
        return {"Very Bad!"};
      }
      else {
        return {"error"};
      }
  - platform: template
    id: qualnum
    name: "IAQ %"
    lambda: |-
      if ( int(id(iaq).state) <= 50) {
        return {"100"};
      }
      else if (int(id(iaq).state) >= 51 && int(id(iaq).state) <= 100) {
        return {"90"};
      }
      else if (int(id(iaq).state) >= 101 && int(id(iaq).state) <= 150) {
        return {"80"};
      }
      else if (int(id(iaq).state) >= 151 && int(id(iaq).state) <= 200) {
        return {"70"};
      }
      else if (int(id(iaq).state) >= 201 && int(id(iaq).state) <= 250) {
        return {"50"};
      }
      else if (int(id(iaq).state) >= 251 && int(id(iaq).state) <= 350) {
        return {"25"};
      }
      else if (int(id(iaq).state) >= 351) {
        return {"0"};
      }
      else {
        return {"1"};
      }
  - platform: template
    id: accunum
    name: "Accuracy %"
    lambda: |-
      if (id(accuracy).state == "Calibrated") {
        return {"100"};
      }
      else if (id(accuracy).state == "Calibrating") {
        return {"50"};
      }
      else if (id(accuracy).state == "Stabilizing") {
        return {"2"};
      }
      else if (id(accuracy).state == "Uncertain") {
        return {"25"};
      }
      else {
        return {"1"};
      }

interval:
  - interval: 120s
    then:
      - switch.turn_on: pms_set
      - delay: 20s
      - switch.turn_off: pms_set

font:
  - file:
      type: gfonts
      family: Roboto
    id: roboto_14
    size: 14

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    lambda: |-
      it.printf(0, 0, id(roboto_14), "PMS: %.0f/%.0f/%.0f",  id(pm1).state, id(pm2).state, id(pm10).state ); 
      it.printf(0, 14, id(roboto_14), "%.1f°F/%.1f%% %.0f cm",  id(temperature_f).state, id(humidity).state, id(ddistance).state); 
      it.printf(0, 30, id(roboto_14), "IAQ: %.0f   %s" ,  id(iaq).state, id(quality).state.c_str());
      it.printf(0, 48, id(roboto_14), "%s",  id(accuracy).state.c_str());  

external_components:
  - source: github://luar123/zigbee_esphome
    components: [zigbee]

globals:
  - id: color_x
    type: float
    restore_value: no
    initial_value: '0'
  - id: color_y
    type: float
    restore_value: no
    initial_value: '0'

zigbee:
  id: "zb"
  router: true
  endpoints:
    - device_type: SIMPLE_SENSOR
      num: 1
      clusters:
        - id: OCCUPANCY_SENSING
          attributes:
            - id: zb_occupancy # actual state as bit. 0 -> empty; 1 -> occupied 
              attribute_id: 0x000
              type: 8BITMAP
              report: true
              value: 0
              device: presence
              lambda: !lambda "return x ? 1 : 0;" # perhaps not needed
            - attribute_id: 0x0001
              type: 8BIT_ENUM
              report: true
              value: 0x02 #0x00 -> PIR; 0x01 -> sonic; 0x02 -> PIR & sonic
        - id: ILLUMINANCE_MEASUREMENT
          attributes:
            - attribute_id: 0
              type: U16
              report: true
              value: 0
              device: ldlux
              lambda: !lambda "return log10(x)*10000 + 1;"
        - id: PM2_5_MEASUREMENT
          attributes:
            - attribute_id: 0x0
              type: single
              report: true
              value: 0
              device: pm2
            - attribute_id: 0x2 # maximum value is needed!
              type: single
              value: 999  
        - id:  ANALOG_INPUT
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 6
              report: true
              value: PM 1.0
            - attribute_id: 0x0051
              type: bool
              value: false
            - attribute_id: 0x0055
              type: single
              device: pm1
              value: 100
              report: true
            - attribute_id: 0x0075
              type: 16BIT_ENUM
              value: 219 # == ohm
              report: true
            - attribute_id: 0x006F
              type: 8BITMAP
              value: 0           
    - num: 2
      device_type: COLOR_DIMMABLE_LIGHT
      clusters:
        - id: ON_OFF
          attributes:
            - attribute_id: 0
              type: bool
              on_value:
                then:
                  - light.control:
                      id: led_1
                      state: !lambda "return (bool)x;"
        - id: LEVEL_CONTROL
          attributes:
            - attribute_id: 0
              type: U8
              on_value:
                then:
                  - light.control:
                      id: led_1
                      brightness: !lambda "return ((float)x)/255;"    
        - id: COLOR_CONTROL
          attributes:
            - attribute_id: 3
              type: U16
              on_value:
                then:
                  - lambda: id(color_x) = (float)x/65536;
                  - light.control:
                      id: led_1
                      red: !lambda "return zigbee::get_r_from_xy(id(color_x), id(color_y));"
                      green: !lambda "return zigbee::get_g_from_xy(id(color_x), id(color_y));"
                      blue: !lambda "return zigbee::get_b_from_xy(id(color_x), id(color_y));"
            - attribute_id: 4
              type: U16
              on_value:
                then:
                  - lambda: id(color_y) = (float)x/65536;
                  - light.control:
                      id: led_1
                      red: !lambda "return zigbee::get_r_from_xy(id(color_x), id(color_y));"
                      green: !lambda "return zigbee::get_g_from_xy(id(color_x), id(color_y));"
                      blue: !lambda "return zigbee::get_b_from_xy(id(color_x), id(color_y));"
    - device_type: SIMPLE_SENSOR
      num: 3
      clusters:
        - id: BINARY_INPUT
          attributes: 
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 6
              report: true
              value: Motion
            - attribute_id: 0x0051
              type: bool
              value: false
            - attribute_id: 0x0055
              type: bool
              device: motion
              report: true
        - id:  ANALOG_INPUT
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 7
              report: true
              value: PM 10.0
            - attribute_id: 0x0051
              type: bool
              value: false
            - attribute_id: 0x0055
              type: single
              device: pm10
              value: 100
              report: true
            - attribute_id: 0x0075
              type: 16BIT_ENUM
              value: 219 # == ohm
              report: true
            - attribute_id: 0x006F
              type: 8BITMAP
              value: 0
    - device_type: TEMPERATURE_SENSOR
      num: 4
      clusters:
        - id: REL_HUMIDITY_MEASUREMENT
          attributes:
            - attribute_id: 0
              device: humidity
              type: U16
              report: true
              value: 100
              scale: 100
        - id: TEMP_MEASUREMENT
          attributes:
            - attribute_id: 0x0
              type: S16
              report: true
              value: 100
              device: temperature
              scale: 100
        - id: PRESSURE_MEASUREMENT
          attributes:
            - attribute_id: 0x0
              type: S16
              report: true
              value: 0x8000
              device: pressure
        - id:  ANALOG_INPUT
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 14
              report: true
              value: Gas Resistance
            - attribute_id: 0x0051
              type: bool
              value: false
            - attribute_id: 0x0055
              type: single
              device: gasresist
              value: 100
              report: true
            - attribute_id: 0x0075
              type: 16BIT_ENUM
              value: 4 # == ohm
              report: true
            - attribute_id: 0x006F
              type: 8BITMAP
              value: 0
    - num: 5
      device_type: ON_OFF_OUTPUT
      clusters:
        - id: ON_OFF
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 5
              report: true
              value: EMODE
            - attribute_id: 0
              type: bool
              on_value:
                then:   
                  - switch.turn_on: emode
    - num: 6
      device_type: ON_OFF_OUTPUT
      clusters:
        - id: ON_OFF
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 5
              report: true
              value: BMODE
            - attribute_id: 0
              type: bool
              on_value:
                then:   
                  - switch.turn_on: bmode     
    - device_type: SIMPLE_SENSOR
      num: 7
      clusters:
        - id:  ANALOG_INPUT
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 11
              report: true
              value: Move Energy
            - attribute_id: 0x0051
              type: bool
              value: false
            - attribute_id: 0x0055
              type: single
              device: menergy
              value: 100
              report: true
            - attribute_id: 0x0075
              type: 16BIT_ENUM
              value: 98 # == generic & use BACNet Engineering Unit Enumeration List
              report: true
            - attribute_id: 0x006F
              type: 8BITMAP
              value: 0
    - device_type: SIMPLE_SENSOR
      num: 8
      clusters:
        - id:  ANALOG_INPUT
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 11
              report: true
              value: Target Dist
            - attribute_id: 0x0051
              type: bool
              value: false
            - attribute_id: 0x0055
              type: single
              report: true
              value: 0
              device: ddistance
            - attribute_id: 0x0075
              type: 16BIT_ENUM
              value: 118 # == centemeters
              report: true
            - attribute_id: 0x006F
              type: 8BITMAP
              value: 0
    - device_type: SIMPLE_SENSOR
      num: 9
      clusters:
        - id:  ANALOG_INPUT
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 12
              report: true
              value: Still Energy
            - attribute_id: 0x0051
              type: bool
              value: false
            - attribute_id: 0x0055
              type: single
              device: senergy
              value: 100
              report: true
            - attribute_id: 0x0075
              type: 16BIT_ENUM
              value: 98 # == generic & 
              report: true
            - attribute_id: 0x006F
              type: 8BITMAP
              value: 0
    - device_type: SIMPLE_SENSOR
      num: 10
      clusters:
        - id:  ANALOG_INPUT
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 3
              report: true
              value: IAQ
            - attribute_id: 0x0051
              type: bool
              value: false
            - attribute_id: 0x0055
              type: single
              device: iaq
              value: 100
              report: true
            - attribute_id: 0x0075
              type: 16BIT_ENUM
              value: 95 # == count
              report: true
            - attribute_id: 0x006F
              type: 8BITMAP
              value: 0  
    - device_type: SIMPLE_SENSOR
      num: 11
      clusters:
        - id:  ANALOG_INPUT
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 8
              report: true
              value: Accuracy
            - attribute_id: 0x0051
              type: bool
              value: false
            - attribute_id: 0x0055
              type: single
              value: 100
              id: setaccu
              report: true
            - attribute_id: 0x0075
              type: 16BIT_ENUM
              value: 98 # == generic percent
              report: true
            - attribute_id: 0x006F
              type: 8BITMAP
              value: 0     
    - device_type: SIMPLE_SENSOR
      num: 12
      clusters:
        - id:  ANALOG_INPUT
          attributes:
            - attribute_id: 0x001C
              type: CHAR_STRING
              max_length: 11
              report: true
              value: Air Quality
            - attribute_id: 0x0051
              type: bool
              value: false
            - attribute_id: 0x0055
              type: single
              value: 100
              id: setqual
              report: true
            - attribute_id: 0x0075
              type: 16BIT_ENUM
              value: 98 # == generic percent
              report: true
            - attribute_id: 0x006F
              type: 8BITMAP
              value: 0
